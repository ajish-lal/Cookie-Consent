{"version":3,"sources":["Common/WidgetDataModel.js","Common/DummyJson.js","Common/Constants.js","Screens/DataConfigure/DataConfigureForm/DataConfigureForm.js","Screens/DataConfigure/DataConfigure.js","Components/ColorPicker/ColorPicker.js","Screens/ThemeConfiguration/ThemeTemplates/TemplateJson.js","Screens/ThemeConfiguration/ThemeConfigureForm/ThemeConfigureForm.js","Screens/ThemeConfiguration/ThemeConfiguration.js","Components/DummyWidget/DummyWidget.js","Components/NavMenu/NavMenu.js","App.js","serviceWorker.js","index.js"],"names":["CookieNotifyData","data","this","headingData","DataObject","contentData","acceptButtonData","settingsLink","backgroundColor","borderColor","CookieSettingsData","accordionData","AccordionData","saveButtonData","headerColor","contentColor","toggleSelectedColor","toggleDefaultColor","accordionList","forEach","element","push","text","textColor","content","hasToggle","selected","WidgetDataModel","cookieNotifyData","cookieSettingsData","position","alwaysShowPopupOnLoad","widgetProps","ADMIN_CONSTANTS","COOKIEPRIVACYHEADER","COOKIEPRIVACYDESCRIPTION","COOKIESETTINGSHEADER","COOKIESETTINGSDESCRIPTION","COOKIEPRIVACYACCEPTBUTTON","COOKIEPRIVACYSETTINGSBUTTON","COOKIESETTINGSACCEPTBUTTON","COOKIESETTINGSSAVEBUTTON","BACKGROUND","PRIMARY_COLOR","SECONDARY_COLOR","HEADER_COLOR","CONTENT_COLOR","NOTIFY_HEADER","NOTIFY_BODY","NOTIFY_BACKGROUND","NOTIFY_BORDER","NOTIFY_ACCEPT_TEXT","NOTIFY_ACCEPT_BACKGROUND","NOTIFY_ACCEPT_BORDER","NOTIFY_SETTINGS_TEXT","NOTIFY_SETTINGS_BACKGROUND","NOTIFY_SETTINGS_BORDER","SETTINGS_HEADER","SETTINGS_BODY","SETTINGS_BACKGROUND","SETTINGS_BORDER","SETTINGS_ACCEPT_TEXT","SETTINGS_ACCEPT_BACKGROUND","SETTINGS_ACCEPT_BORDER","SETTINGS_SAVE_TEXT","SETTINGS_SAVE_BACKGROUND","SETTINGS_SAVE_BORDER","SETTINGS_ACCORDION_HEADER","SETTINGS_ACCORDION_BODY","SETTINGS_ACCORDION_BACKGROUND","SETTINGS_ACCORDION_BORDER","SETTINGS_ACCORDION_TOGGLE_SELECTED","SETTINGS_ACCORDION_TOGGLE","Column","Table","DataConfigureForm","props","dataChange","event","setState","target","name","value","CONSTANTS","widgetDataModel","handleChange","selectCookieCategory","selectedCookieKeys","selectedCookieCategories","console","log","state","cookiePrivacyHeader","cookiePrivacyDescription","cookieSettingsHeader","cookieSettingsDescription","cookiePrivacyAcceptBtn","cookiePrivacySettingsBtn","cookieSettingsAcceptBtn","cookieSettingsSaveBtn","cookieCategoryList","key","cookie","DummyJson","cookieSelection","onChange","getCheckboxProps","categoryList","disabled","className","span","orientation","layout","Item","label","placeholder","TextArea","justify","bordered","dataSource","rowSelection","pagination","title","dataIndex","Component","DataConfigure","dataFromChild","widgetData","offset","ColorPicker","displayColorPicker","color","defaultColor","handleClick","handleClose","hex","colorPicked","prevProps","colorDisplay","background","style","onClick","zIndex","top","right","bottom","left","width","Option","Select","Panel","Collapse","ThemeConfigureForm","changeGlobalTheme","colorData","type","calculateTextColor","rgb","changeNotifyTheme","changeSettingsTheme","loadTheme","selectedTheme","TemplateJson","light","alien","dark","saveTheme","JSON","stringify","calculatedColor","r","g","b","primaryColor","secondaryColor","notifyHeaderColor","notifyBodyColor","notifyBackgroundColor","notifyBorderColor","notifyAcceptTextColor","notifyAcceptBackgroundColor","notifyAcceptBorderColor","notifySettingsTextColor","notifySettingsBackgroundColor","notifySettingsBorderColor","settingsHeaderColor","settingsBodyColor","settingsBackgroundColor","settingsBorderColor","settingsAcceptTextColor","settingsAcceptBackgroundColor","settingsAcceptBorderColor","settingsSaveTextColor","settingsSaveBackgroundColor","settingsSaveBorderColor","settingsAccordionHeaderColor","settingsAccordionBodyColor","settingsAccordionBackgroundColor","settingsAccordionBorderColor","settingsAccordionToggleSelectedColor","settingsAccordionToggleColor","defaultValue","header","gutter","marginTop","danger","ThemeConfiguration","DummyWidget","widget","document","querySelector","popupProperties","widgetJsonData","Header","Layout","Content","Sider","SubMenu","Menu","NavMenu","collapsed","currentPath","onCollapse","minHeight","minWidth","EyeInvisibleFilled","fontSize","alignSelf","collapsible","theme","defaultSelectedKeys","mode","icon","PieChartOutlined","to","GlobalOutlined","marginLeft","transition","path","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ffbea0ef.chunk.js","sourcesContent":["export class WidgetDataModel {\r\n    constructor(data) {\r\n        this.cookieNotifyData = new CookieNotifyData(data.cookieNotifyData);\r\n        this.cookieSettingsData = new CookieSettingsData(data.cookieSettingsData);\r\n        this.position = data.position;\r\n        this.alwaysShowPopupOnLoad = data.alwaysShowPopupOnLoad;\r\n    }\r\n}\r\n\r\nclass CookieNotifyData {\r\n    constructor(data) {\r\n        this.headingData = new DataObject(data.headingData);\r\n        this.contentData = new DataObject(data.contentData);\r\n        this.acceptButtonData = new DataObject(data.acceptButtonData);\r\n        this.settingsLink = new DataObject(data.settingsLink);\r\n        this.backgroundColor = data.backgroundColor;\r\n        this.borderColor = data.backgroundColor;\r\n    }\r\n}\r\n\r\nclass CookieSettingsData {\r\n    constructor(data) {\r\n        this.headingData = new DataObject(data.headingData);\r\n        this.contentData = new DataObject(data.contentData);\r\n        this.acceptButtonData = new DataObject(data.acceptButtonData);\r\n        this.accordionData = new AccordionData(data.accordionData);\r\n        this.saveButtonData = new DataObject(data.saveButtonData);\r\n        this.backgroundColor = data.backgroundColor;\r\n        this.borderColor = data.backgroundColor;\r\n    }\r\n}\r\n\r\nclass AccordionData {\r\n    constructor(data) {\r\n        this.headerColor = data.headerColor;\r\n        this.contentColor = data.contentColor;\r\n        this.toggleSelectedColor = data.toggleSelectedColor;\r\n        this.toggleDefaultColor = data.toggleDefaultColor;\r\n        this.backgroundColor = data.backgroundColor;\r\n        this.borderColor = data.borderColor;\r\n        this.accordionList = [];\r\n        data.accordionList.forEach(element => {\r\n            this.accordionList.push(new DataObject(element)) \r\n        });\r\n    }\r\n}\r\n\r\nclass DataObject {\r\n    constructor(data) {\r\n        this.text = data.text;\r\n        this.textColor = data.textColor;\r\n        this.backgroundColor = data.backgroundColor;\r\n        this.borderColor = data.borderColor;\r\n        this.content = data.content;\r\n        this.hasToggle = data.hasToggle;\r\n        this.selected = data.selected;\r\n    }\r\n}\r\n\r\nexport default WidgetDataModel\r\n","const widgetProperties = {\r\n    cookieNotifyData: {\r\n        headingData: {\r\n            text: \"This site uses cookies\",\r\n            textColor: \"#808080\"\r\n        },\r\n        contentData: {\r\n            text: `We use cookies to improve your experience, to remember log-in details, provide secure login, collect, to optimize site functionality and deliver content tailored to your interests.`,\r\n            textColor: \"#808080\"\r\n        },\r\n        acceptButtonData: {\r\n            text: \"Accept\",\r\n            textColor: \"white\",\r\n            backgroundColor: \"#212529\"\r\n        },\r\n        settingsLink: {\r\n            text: \"Settings\",\r\n            textColor: \"white\",\r\n            backgroundColor: \"#006496\"\r\n        },\r\n        backgroundColor: \"#fff\",\r\n        borderColor: \"#ABB8C3\"\r\n    },\r\n    cookieSettingsData: {\r\n        headingData: {\r\n            text: \"Your Privacy\",\r\n            textColor: \"black\"\r\n        },\r\n        contentData: {\r\n            text: `We use cookies to improve your experience, to remember log-in details, provide secure login, collect, to optimize site functionality and deliver content tailored to your interests.`,\r\n            textColor: \"grey\"\r\n        },\r\n        acceptButtonData: {\r\n            text: \"Accept All\",\r\n            textColor: \"white\",\r\n            backgroundColor: \"#006496\"\r\n        },\r\n        accordionData: {\r\n            headerColor: \"black\",\r\n            contentColor: \"black\",\r\n            toggleSelectedColor: \"#2196F3\",\r\n            toggleDefaultColor: \"#ccc\",\r\n            backgroundColor: \"white\",\r\n            borderColor: \"black\",\r\n            accordionList: [\r\n                {\r\n                    text: \"Strictly Necessary Cookies\",\r\n                    hasToggle: false,\r\n                    content: `These cookies are necessary for the website to function and cannot be switched off in our systems. They are usually only set in response to actions made by you which amount to a request for services, such as setting your privacy preferences, logging in or filling in forms.\\r\\n\\r\\nYou can set your browser to block or alert you about these cookies, but some parts of the site will not then work. These cookies do not store any personally identifiable information.`\r\n                }, {\r\n                    text: \"Performance Cookies\",\r\n                    hasToggle: true,\r\n                    content: `These cookies allow us to count visits and traffic sources so we can measure and improve the performance of our site. They help us to know which pages are the most and least popular and see how visitors move around the site.\\r\\n\\r\\nAll information these cookies collect is aggregated and therefore anonymous. If you do not allow these cookies we will not know when you have visited our site, and will not be able to monitor its performance.`,\r\n                    selected: true\r\n                }, {\r\n                    text: \"Functional Cookies\",\r\n                    hasToggle: true,\r\n                    content: `These cookies enable the website to provide enhanced functionality and personalisation. They may be set by us or by third party providers whose services we have added to our pages.\\r\\n\\r\\nIf you do not allow these cookies then some or all of these services may not function properly.`,\r\n                    selected: false\r\n                }, {\r\n                    text: \"Targetting Cookies\",\r\n                    hasToggle: true,\r\n                    content: `These cookies may be set through our site by our advertising partners. They may be used by those companies to build a profile of your interests and show you relevant adverts on other sites.\\r\\n\\r\\nThey do not store directly personal information, but are based on uniquely identifying your browser and internet device. If you do not allow these cookies, you will experience less targeted advertising.`,\r\n                    selected: false\r\n                }\r\n            ]\r\n        },\r\n        saveButtonData: {\r\n            text: \"Save My Preferences\",\r\n            textColor: \"#000\",\r\n            backgroundColor: \"#fff\",\r\n            borderColor: \"#000\"\r\n        },\r\n        backgroundColor: \"#fff\",\r\n        borderColor: \"#ABB8C3\"\r\n    },\r\n    position: \"right\",\r\n    alwaysShowPopupOnLoad: false\r\n};\r\n\r\nexport default {\r\n    widgetProps : widgetProperties\r\n};","const ADMIN_CONSTANTS = {\r\n    COOKIEPRIVACYHEADER: 'cookiePrivacyHeader',\r\n    COOKIEPRIVACYDESCRIPTION: 'cookiePrivacyDescription',\r\n    COOKIESETTINGSHEADER: 'cookieSettingsHeader',\r\n    COOKIESETTINGSDESCRIPTION: 'cookieSettingsDescription',\r\n    COOKIEPRIVACYACCEPTBUTTON: 'cookiePrivacyAcceptBtn',\r\n    COOKIEPRIVACYSETTINGSBUTTON: 'cookiePrivacySettingsBtn',\r\n    COOKIESETTINGSACCEPTBUTTON: 'cookieSettingsAcceptBtn',\r\n    COOKIESETTINGSSAVEBUTTON: 'cookieSettingsSaveBtn',\r\n\r\n    BACKGROUND: 'backgroundColor',\r\n    PRIMARY_COLOR: 'primaryColor',\r\n    SECONDARY_COLOR: 'secondaryColor',\r\n    HEADER_COLOR: 'headerColor',\r\n    CONTENT_COLOR: 'contentColor',\r\n\r\n    NOTIFY_HEADER: 'notifyHeaderColor',\r\n    NOTIFY_BODY: 'notifyBodyColor',\r\n    NOTIFY_BACKGROUND: 'notifyBackgroundColor',\r\n    NOTIFY_BORDER: 'notifyBorderColor',\r\n\r\n    NOTIFY_ACCEPT_TEXT: 'notifyAcceptTextColor',\r\n    NOTIFY_ACCEPT_BACKGROUND: 'notifyAcceptBackgroundColor',\r\n    NOTIFY_ACCEPT_BORDER: 'notifyAcceptBorderColor',\r\n\r\n    NOTIFY_SETTINGS_TEXT: 'notifySettingsTextColor',\r\n    NOTIFY_SETTINGS_BACKGROUND: 'notifySettingsBackgroundColor',\r\n    NOTIFY_SETTINGS_BORDER: 'notifySettingsBorderColor',\r\n\r\n    SETTINGS_HEADER: 'settingsHeaderColor',\r\n    SETTINGS_BODY: 'settingsBodyColor',\r\n    SETTINGS_BACKGROUND: 'settingsBackgroundColor',\r\n    SETTINGS_BORDER: 'settingsBorderColor',\r\n\r\n    SETTINGS_ACCEPT_TEXT: 'settingsAcceptTextColor',\r\n    SETTINGS_ACCEPT_BACKGROUND: 'settingsAcceptBackgroundColor',\r\n    SETTINGS_ACCEPT_BORDER: 'settingsAcceptBorderColor',\r\n\r\n    SETTINGS_SAVE_TEXT: 'settingsSaveTextColor',\r\n    SETTINGS_SAVE_BACKGROUND: 'settingsSaveBackgroundColor',\r\n    SETTINGS_SAVE_BORDER: 'settingsSaveBorderColor',\r\n\r\n    SETTINGS_ACCORDION_HEADER: 'settingsAccordionHeaderColor',\r\n    SETTINGS_ACCORDION_BODY: 'settingsAccordionBodyColor',\r\n    SETTINGS_ACCORDION_BACKGROUND: 'settingsAccordionBackgroundColor',\r\n    SETTINGS_ACCORDION_BORDER: 'settingsAccordionBorderColor',\r\n    SETTINGS_ACCORDION_TOGGLE_SELECTED: 'settingsAccordionToggleSelectedColor',\r\n    SETTINGS_ACCORDION_TOGGLE: 'settingsAccordionToggleColor'\r\n}\r\n\r\nexport default ADMIN_CONSTANTS;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Form, Input, Table, Divider, Row, Col } from 'antd';\r\nimport './DataConfigureForm.scss';\r\nimport WidgetDataModel from '../../../Common/WidgetDataModel';\r\nimport DummyJson from '../../../Common/DummyJson';\r\nimport CONSTANTS from '../../../Common/Constants';\r\n\r\nconst { Column } = Table;\r\n\r\nclass DataConfigureForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cookiePrivacyHeader: this.props.widgetDataModel.cookieNotifyData.headingData.text,\r\n            cookiePrivacyDescription: this.props.widgetDataModel.cookieSettingsData.contentData.text,\r\n            cookieSettingsHeader: this.props.widgetDataModel.cookieSettingsData.headingData.text,\r\n            cookieSettingsDescription: this.props.widgetDataModel.cookieSettingsData.contentData.text,\r\n            cookiePrivacyAcceptBtn: this.props.widgetDataModel.cookieNotifyData.acceptButtonData.text,\r\n            cookiePrivacySettingsBtn: this.props.widgetDataModel.cookieNotifyData.settingsLink.text,\r\n            cookieSettingsAcceptBtn: this.props.widgetDataModel.cookieSettingsData.acceptButtonData.text,\r\n            cookieSettingsSaveBtn: this.props.widgetDataModel.cookieSettingsData.saveButtonData.text,\r\n            // showCategoryModal: false,\r\n            cookieCategoryList: [\r\n                {\r\n                    key: '1',\r\n                    cookie: 'Strictly necessary',\r\n                    \r\n                },\r\n                {\r\n                    key: '2',\r\n                    cookie: 'Functional cookies',\r\n                }\r\n            ],\r\n            selectedCookieKeys: []\r\n            \r\n        }\r\n        this.widgetDataModel = new WidgetDataModel(props.widgetDataModel);\r\n        this.widgetDataModel = DummyJson.widgetProps;\r\n    }\r\n\r\n\r\n    // showModal = () => {\r\n    //     this.setState({\r\n    //         showCategoryModal: true\r\n    //     })\r\n    // };\r\n\r\n    // handleCancel = () => {\r\n    //     this.setState({ showCategoryModal: false });\r\n    // };\r\n\r\n    // handleOk = () => {\r\n    //     this.setState({ showCategoryModal: false });\r\n    // };\r\n\r\n    dataChange = (event) => {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        );\r\n        switch (event.target.name) {\r\n            case CONSTANTS.COOKIEPRIVACYHEADER:\r\n                this.widgetDataModel.cookieNotifyData.headingData.text = event.target.value;\r\n                break;\r\n            case CONSTANTS.COOKIESETTINGSHEADER:\r\n                this.widgetDataModel.cookieSettingsData.headingData.text = event.target.value;\r\n                break;\r\n            case CONSTANTS.COOKIEPRIVACYDESCRIPTION:\r\n                this.widgetDataModel.cookieNotifyData.contentData.text = event.target.value;\r\n                break;\r\n            case CONSTANTS.COOKIESETTINGSDESCRIPTION:\r\n                this.widgetDataModel.cookieSettingsData.contentData.text = event.target.value;\r\n                break;\r\n            case CONSTANTS.COOKIEPRIVACYACCEPTBUTTON:\r\n                this.widgetDataModel.cookieNotifyData.acceptButtonData.text = event.target.value;\r\n                break;\r\n            case CONSTANTS.COOKIEPRIVACYSETTINGSBUTTON:\r\n                this.widgetDataModel.cookieNotifyData.settingsLink.text = event.target.value;\r\n                break;\r\n            case CONSTANTS.COOKIESETTINGSACCEPTBUTTON:\r\n                this.widgetDataModel.cookieSettingsData.acceptButtonData.text = event.target.value;\r\n                break;\r\n            case CONSTANTS.COOKIESETTINGSSAVEBUTTON:\r\n                this.widgetDataModel.cookieSettingsData.saveButtonData.text = event.target.value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this\r\n            .props\r\n            .handleChange(this.widgetDataModel);\r\n    }\r\n\r\n    selectCookieCategory = (selectedCookieKeys, selectedCookieCategories) => {\r\n        console.log('Cookie category', selectedCookieCategories);\r\n        console.log('Cookie category keys', selectedCookieKeys);\r\n        this.setState({selectedCookieKeys});\r\n    }\r\n\r\n    render() {\r\n        // const showCategoryModal = this.state.showCategoryModal;\r\n        const { selectedCookieKeys } = this.state;\r\n\r\n        const cookieSelection = {\r\n            selectedCookieKeys,\r\n            onChange: this.selectCookieCategory,\r\n            getCheckboxProps: categoryList => ({\r\n                disabled: categoryList.cookie === 'Strictly necessary', \r\n            })\r\n        };\r\n        return (\r\n            <Fragment>\r\n                <Row className=\"WidgetDataForm\">\r\n                    <Col span={24}>\r\n                        <Divider orientation=\"center\" className=\"Header\">Data Configure</Divider>\r\n                        <Form\r\n                            layout=\"vertical\"\r\n                        >\r\n                            <div className=\"DataForm\">\r\n                                <div className=\"FieldsWrap\">\r\n                                    <Divider className=\"NoMargin\">Notify pop up</Divider>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Header\">\r\n                                                <Input placeholder=\"Header\"\r\n                                                    name=\"cookiePrivacyHeader\"\r\n                                                    value={this.state.cookiePrivacyHeader}\r\n                                                    onChange={this.dataChange}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Description\">\r\n                                                <Input.TextArea placeholder=\"Description\"\r\n                                                    name=\"cookiePrivacyDescription\"\r\n                                                    value={this.state.cookiePrivacyDescription}\r\n                                                    onChange={this.dataChange}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row justify=\"space-between\">\r\n                                        <Col span={11}>\r\n                                            <Form.Item label=\"Accept button\">\r\n                                                <Input placeholder=\"Button text\"\r\n                                                    name=\"cookiePrivacyAcceptBtn\"\r\n                                                    value={this.state.cookiePrivacyAcceptBtn}\r\n                                                    onChange={this.dataChange}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={11}>\r\n                                            <Form.Item label=\"Settings button\">\r\n                                                <Input placeholder=\"Button text\"\r\n                                                    name=\"cookiePrivacySettingsBtn\"\r\n                                                    value={this.state.cookiePrivacySettingsBtn}\r\n                                                    onChange={this.dataChange}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                <div className=\"FieldsWrap\">\r\n                                    <Divider className=\"NoMargin\">Settings pop up</Divider>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Header\">\r\n                                                <Input placeholder=\"Header\"\r\n                                                    name=\"cookieSettingsHeader\"\r\n                                                    value={this.state.cookieSettingsHeader}\r\n                                                    onChange={this.dataChange}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Form.Item label=\"Description\">\r\n                                                <Input.TextArea placeholder=\"Description\"\r\n                                                    name=\"cookieSettingsDescription\"\r\n                                                    value={this.state.cookieSettingsDescription}\r\n                                                    onChange={this.dataChange}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify=\"space-between\">\r\n                                        <Col span={11}>\r\n                                            <Form.Item label=\"Accept button\">\r\n                                                <Input placeholder=\"Button text\"\r\n                                                    name=\"cookieSettingsAcceptBtn\"\r\n                                                    value={this.state.cookieSettingsAcceptBtn}\r\n                                                    onChange={this.dataChange}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={11}>\r\n                                            <Form.Item label=\"Save button\">\r\n                                                <Input placeholder=\"Button text\"\r\n                                                    name=\"cookieSettingsSaveBtn\"\r\n                                                    value={this.state.cookieSettingsSaveBtn}\r\n                                                    onChange={this.dataChange}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <Divider orientation=\"center\">Cookie category</Divider>\r\n\r\n                            <Table bordered \r\n                                dataSource={this.state.cookieCategoryList}\r\n                                rowSelection={cookieSelection}\r\n                                pagination={false}\r\n                            >\r\n                                <Column title=\"No\" dataIndex=\"key\"  />\r\n                                <Column title=\"Cookie\" dataIndex=\"cookie\" />\r\n\r\n                            </Table>\r\n\r\n\r\n                        </Form>\r\n\r\n                        {/* <Modal\r\n                            visible={showCategoryModal}\r\n                            title=\"Title\"\r\n                            onOk={this.handleOk}\r\n                            onCancel={this.handleCancel}\r\n                            footer={[\r\n\r\n                                <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\r\n                                    Submit\r\n                            </Button>,\r\n                            ]}\r\n                        >\r\n                            <p>Some contents...</p>\r\n                            \r\n                        </Modal> */}\r\n                    </Col>\r\n                </Row>\r\n            </Fragment >\r\n        );\r\n    }\r\n}\r\nexport default DataConfigureForm;","import React, { Component, Fragment } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport './DataConfigure.scss';\r\nimport DataConfigureForm from './DataConfigureForm/DataConfigureForm';\r\n\r\nclass DataConfigure extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Row className=\"DataWidgetPadding\">\r\n          <Col span={15}>\r\n            <DataConfigureForm widgetDataModel={this.props.widgetData} handleChange={this.dataFromChild} />\r\n          </Col>\r\n          <Col offset={8}></Col>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n  dataFromChild = (data) => {\r\n    this.props.dataFromChild(data);\r\n  };\r\n}\r\n\r\nexport default DataConfigure;\r\n","import React, {Component, Fragment} from 'react';\r\nimport './ColorPicker.scss'\r\nimport {SwatchesPicker} from 'react-color';\r\n\r\nexport class ColorPicker extends Component {\r\n    state = {\r\n        displayColorPicker: false,\r\n        color: this.props.defaultColor\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.defaultColor !== this.props.defaultColor) {\r\n            this.setState({color: this.props.defaultColor});\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            displayColorPicker: !this.state.displayColorPicker\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({displayColorPicker: false})\r\n    };\r\n\r\n    handleChange = (color) => {\r\n        this.setState({\r\n            color: color.hex,\r\n            displayColorPicker: !this.state.displayColorPicker\r\n        });\r\n        this\r\n            .props\r\n            .colorPicked(color);\r\n    };\r\n\r\n    render() {\r\n        const popover = {\r\n            position: 'absolute',\r\n            zIndex: '2'\r\n        }\r\n        const cover = {\r\n            position: 'fixed',\r\n            top: '0px',\r\n            right: '0px',\r\n            bottom: '0px',\r\n            left: '0px'\r\n        }\r\n\r\n        const colorDisplay = {\r\n            background: this.state.color\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <div style={colorDisplay} className=\"colorDisplay\" onClick={this.handleClick}>&nbsp;</div>\r\n                {this.state.displayColorPicker\r\n                    ? <div style={popover}>\r\n                            <div style={cover} onClick={this.handleClose}/>\r\n                            <SwatchesPicker width={372} color={this.state.color} onChange={this.handleChange}/>\r\n                        </div>\r\n                    : null}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColorPicker\r\n","const widgetProperties = {\r\n    \"light\": {\r\n        \"cookieNotifyData\": {\r\n            \"headingData\": {\r\n                \"text\": \"This site uses cookies\",\r\n                \"textColor\": \"#0693e3\"\r\n            },\r\n            \"contentData\": {\r\n                \"text\": \"We use cookies to improve your experience, to remember log-in details, provide s\" +\r\n                        \"ecure login, collect, to optimize site functionality and deliver content tailore\" +\r\n                        \"d to your interests.\",\r\n                \"textColor\": \"#808080\"\r\n            },\r\n            \"acceptButtonData\": {\r\n                \"text\": \"Accept\",\r\n                \"textColor\": \"white\",\r\n                \"backgroundColor\": \"#0693e3\"\r\n            },\r\n            \"settingsLink\": {\r\n                \"text\": \"Settings\",\r\n                \"textColor\": \"white\",\r\n                \"backgroundColor\": \"#ff6900\"\r\n            },\r\n            \"backgroundColor\": \"\",\r\n            \"borderColor\": \"#abb8c3\"\r\n        },\r\n        \"cookieSettingsData\": {\r\n            \"headingData\": {\r\n                \"text\": \"Your Privacy\",\r\n                \"textColor\": \"#0693e3\"\r\n            },\r\n            \"contentData\": {\r\n                \"text\": \"We use cookies to improve your experience, to remember log-in details, provide s\" +\r\n                        \"ecure login, collect, to optimize site functionality and deliver content tailore\" +\r\n                        \"d to your interests.\",\r\n                \"textColor\": \"#808080\"\r\n            },\r\n            \"acceptButtonData\": {\r\n                \"text\": \"Accept All\",\r\n                \"textColor\": \"white\",\r\n                \"backgroundColor\": \"#0693e3\"\r\n            },\r\n            \"accordionData\": {\r\n                \"headerColor\": \"#0693e3\",\r\n                \"contentColor\": \"#808080\",\r\n                \"backgroundColor\": \"white\",\r\n                \"borderColor\": \"#abb8c3\",\r\n                \"accordionList\": [\r\n                    {\r\n                        \"text\": \"Strictly Necessary Cookies\",\r\n                        \"content\": \"These cookies are necessary for the website to function and cannot be switched o\" +\r\n                                \"ff in our systems. They are usually only set in response to actions made by you \" +\r\n                                \"which amount to a request for services, such as setting your privacy preferences\" +\r\n                                \", logging in or filling in forms.\\r\\n\\r\\nYou can set your browser to block or al\" +\r\n                                \"ert you about these cookies, but some parts of the site will not then work. Thes\" +\r\n                                \"e cookies do not store any personally identifiable information.\",\r\n                        \"hasToggle\": false\r\n                    }, {\r\n                        \"text\": \"Performance Cookies\",\r\n                        \"content\": \"These cookies allow us to count visits and traffic sources so we can measure and\" +\r\n                                \" improve the performance of our site. They help us to know which pages are the m\" +\r\n                                \"ost and least popular and see how visitors move around the site.\\r\\n\\r\\nAll info\" +\r\n                                \"rmation these cookies collect is aggregated and therefore anonymous. If you do n\" +\r\n                                \"ot allow these cookies we will not know when you have visited our site, and will\" +\r\n                                \" not be able to monitor its performance.\",\r\n                        \"hasToggle\": true,\r\n                        \"selected\": true\r\n                    }, {\r\n                        \"text\": \"Functional Cookies\",\r\n                        \"content\": \"These cookies enable the website to provide enhanced functionality and personali\" +\r\n                                \"sation. They may be set by us or by third party providers whose services we have\" +\r\n                                \" added to our pages.\\r\\n\\r\\nIf you do not allow these cookies then some or all o\" +\r\n                                \"f these services may not function properly.\",\r\n                        \"hasToggle\": true,\r\n                        \"selected\": false\r\n                    }, {\r\n                        \"text\": \"Targetting Cookies\",\r\n                        \"content\": \"These cookies may be set through our site by our advertising partners. They may \" +\r\n                                \"be used by those companies to build a profile of your interests and show you rel\" +\r\n                                \"evant adverts on other sites.\\r\\n\\r\\nThey do not store directly personal informa\" +\r\n                                \"tion, but are based on uniquely identifying your browser and internet device. If\" +\r\n                                \" you do not allow these cookies, you will experience less targeted advertising.\",\r\n                        \"hasToggle\": true,\r\n                        \"selected\": false\r\n                    }\r\n                ],\r\n                \"toggleColor\": \"#0693e3\"\r\n            },\r\n            \"saveButtonData\": {\r\n                \"text\": \"Save My Preferences\",\r\n                \"textColor\": \"#ffffff\",\r\n                \"backgroundColor\": \"#ff6900\",\r\n                \"borderColor\": \"#ff6900\"\r\n            },\r\n            \"backgroundColor\": \"\",\r\n            \"borderColor\": \"#abb8c3\"\r\n        },\r\n        \"position\": \"right\",\r\n        \"alwaysShowPopupOnLoad\": false\r\n    },\r\n\r\n    \"alien\": {\r\n        \"cookieNotifyData\": {\r\n            \"headingData\": {\r\n                \"text\": \"This site uses cookies\",\r\n                \"textColor\": \"#ffffff\"\r\n            },\r\n            \"contentData\": {\r\n                \"text\": \"We use cookies to improve your experience, to remember log-in details, provide s\" +\r\n                        \"ecure login, collect, to optimize site functionality and deliver content tailore\" +\r\n                        \"d to your interests.\",\r\n                \"textColor\": \"#d9d9d9\"\r\n            },\r\n            \"acceptButtonData\": {\r\n                \"text\": \"Accept\",\r\n                \"textColor\": \"#ffffff\",\r\n                \"backgroundColor\": \"#4fc3f7\"\r\n            },\r\n            \"settingsLink\": {\r\n                \"text\": \"Settings\",\r\n                \"textColor\": \"white\",\r\n                \"backgroundColor\": \"#ffa000\"\r\n            },\r\n            \"backgroundColor\": \"#525252\",\r\n            \"borderColor\": \"#525252\"\r\n        },\r\n        \"cookieSettingsData\": {\r\n            \"headingData\": {\r\n                \"text\": \"Your Privacy\",\r\n                \"textColor\": \"#ffffff\"\r\n            },\r\n            \"contentData\": {\r\n                \"text\": \"We use cookies to improve your experience, to remember log-in details, provide s\" +\r\n                        \"ecure login, collect, to optimize site functionality and deliver content tailore\" +\r\n                        \"d to your interests.\",\r\n                \"textColor\": \"#d9d9d9\"\r\n            },\r\n            \"acceptButtonData\": {\r\n                \"text\": \"Accept All\",\r\n                \"textColor\": \"white\",\r\n                \"backgroundColor\": \"#4fc3f7\"\r\n            },\r\n            \"accordionData\": {\r\n                \"headerColor\": \"#ffffff\",\r\n                \"contentColor\": \"black\",\r\n                \"toggleSelectedColor\": \"#2196F3\",\r\n                \"toggleDefaultColor\": \"#ccc\",\r\n                \"backgroundColor\": \"#969696\",\r\n                \"borderColor\": \"black\",\r\n                \"accordionList\": [\r\n                    {\r\n                        \"text\": \"Strictly Necessary Cookies\",\r\n                        \"content\": \"These cookies are necessary for the website to function and cannot be switched o\" +\r\n                                \"ff in our systems. They are usually only set in response to actions made by you \" +\r\n                                \"which amount to a request for services, such as setting your privacy preferences\" +\r\n                                \", logging in or filling in forms.\\r\\n\\r\\nYou can set your browser to block or al\" +\r\n                                \"ert you about these cookies, but some parts of the site will not then work. Thes\" +\r\n                                \"e cookies do not store any personally identifiable information.\",\r\n                        \"hasToggle\": false\r\n                    }, {\r\n                        \"text\": \"Performance Cookies\",\r\n                        \"content\": \"These cookies allow us to count visits and traffic sources so we can measure and\" +\r\n                                \" improve the performance of our site. They help us to know which pages are the m\" +\r\n                                \"ost and least popular and see how visitors move around the site.\\r\\n\\r\\nAll info\" +\r\n                                \"rmation these cookies collect is aggregated and therefore anonymous. If you do n\" +\r\n                                \"ot allow these cookies we will not know when you have visited our site, and will\" +\r\n                                \" not be able to monitor its performance.\",\r\n                        \"hasToggle\": true,\r\n                        \"selected\": true\r\n                    }, {\r\n                        \"text\": \"Functional Cookies\",\r\n                        \"content\": \"These cookies enable the website to provide enhanced functionality and personali\" +\r\n                                \"sation. They may be set by us or by third party providers whose services we have\" +\r\n                                \" added to our pages.\\r\\n\\r\\nIf you do not allow these cookies then some or all o\" +\r\n                                \"f these services may not function properly.\",\r\n                        \"hasToggle\": true,\r\n                        \"selected\": false\r\n                    }, {\r\n                        \"text\": \"Targetting Cookies\",\r\n                        \"content\": \"These cookies may be set through our site by our advertising partners. They may \" +\r\n                                \"be used by those companies to build a profile of your interests and show you rel\" +\r\n                                \"evant adverts on other sites.\\r\\n\\r\\nThey do not store directly personal informa\" +\r\n                                \"tion, but are based on uniquely identifying your browser and internet device. If\" +\r\n                                \" you do not allow these cookies, you will experience less targeted advertising.\",\r\n                        \"hasToggle\": true,\r\n                        \"selected\": false\r\n                    }\r\n                ],\r\n                \"toggleColor\": \"#4fc3f7\"\r\n            },\r\n            \"saveButtonData\": {\r\n                \"text\": \"Save My Preferences\",\r\n                \"textColor\": \"#ffffff\",\r\n                \"backgroundColor\": \"#ffa000\",\r\n                \"borderColor\": \"#ffa000\"\r\n            },\r\n            \"backgroundColor\": \"#525252\",\r\n            \"borderColor\": \"#fff\"\r\n        },\r\n        \"position\": \"right\",\r\n        \"alwaysShowPopupOnLoad\": false\r\n    },\r\n\r\n    \"dark\": {\r\n        \"cookieNotifyData\": {\r\n            \"headingData\": {\r\n                \"text\": \"This site uses cookies\",\r\n                \"textColor\": \"#ffffff\"\r\n            },\r\n            \"contentData\": {\r\n                \"text\": \"We use cookies to improve your experience, to remember log-in details, provide s\" +\r\n                        \"ecure login, collect, to optimize site functionality and deliver content tailore\" +\r\n                        \"d to your interests.\",\r\n                \"textColor\": \"#ffffff\"\r\n            },\r\n            \"acceptButtonData\": {\r\n                \"text\": \"Accept\",\r\n                \"textColor\": \"#ffffff\",\r\n                \"backgroundColor\": \"#0288d1\",\r\n                \"borderColor\": \"#0288d1\"\r\n            },\r\n            \"settingsLink\": {\r\n                \"text\": \"Settings\",\r\n                \"textColor\": \"#000000\",\r\n                \"backgroundColor\": \"#d9d9d9\",\r\n                \"borderColor\": \"#d9d9d9\"\r\n            },\r\n            \"backgroundColor\": \"#263238\",\r\n            \"borderColor\": \"#263238\"\r\n        },\r\n        \"cookieSettingsData\": {\r\n            \"headingData\": {\r\n                \"text\": \"Your Privacy\",\r\n                \"textColor\": \"#ffffff\"\r\n            },\r\n            \"contentData\": {\r\n                \"text\": \"We use cookies to improve your experience, to remember log-in details, provide s\" +\r\n                        \"ecure login, collect, to optimize site functionality and deliver content tailore\" +\r\n                        \"d to your interests.\",\r\n                \"textColor\": \"#ffffff\"\r\n            },\r\n            \"acceptButtonData\": {\r\n                \"text\": \"Accept All\",\r\n                \"textColor\": \"#ffffff\",\r\n                \"backgroundColor\": \"#0288d1\",\r\n                \"borderColor\": \"#0288d1\"\r\n            },\r\n            \"accordionData\": {\r\n                \"headerColor\": \"#ffffff\",\r\n                \"contentColor\": \"#ffffff\",\r\n                \"toggleSelectedColor\": \"#0288d1\",\r\n                \"toggleDefaultColor\": \"#cfd8dc\",\r\n                \"backgroundColor\": \"#90a4ae\",\r\n                \"borderColor\": \"black\",\r\n                \"accordionList\": [\r\n                    {\r\n                        \"text\": \"Strictly Necessary Cookies\",\r\n                        \"content\": \"These cookies are necessary for the website to function and cannot be switched o\" +\r\n                                \"ff in our systems. They are usually only set in response to actions made by you \" +\r\n                                \"which amount to a request for services, such as setting your privacy preferences\" +\r\n                                \", logging in or filling in forms.\\r\\n\\r\\nYou can set your browser to block or al\" +\r\n                                \"ert you about these cookies, but some parts of the site will not then work. Thes\" +\r\n                                \"e cookies do not store any personally identifiable information.\",\r\n                        \"hasToggle\": false\r\n                    }, {\r\n                        \"text\": \"Performance Cookies\",\r\n                        \"content\": \"These cookies allow us to count visits and traffic sources so we can measure and\" +\r\n                                \" improve the performance of our site. They help us to know which pages are the m\" +\r\n                                \"ost and least popular and see how visitors move around the site.\\r\\n\\r\\nAll info\" +\r\n                                \"rmation these cookies collect is aggregated and therefore anonymous. If you do n\" +\r\n                                \"ot allow these cookies we will not know when you have visited our site, and will\" +\r\n                                \" not be able to monitor its performance.\",\r\n                        \"hasToggle\": true,\r\n                        \"selected\": true\r\n                    }, {\r\n                        \"text\": \"Functional Cookies\",\r\n                        \"content\": \"These cookies enable the website to provide enhanced functionality and personali\" +\r\n                                \"sation. They may be set by us or by third party providers whose services we have\" +\r\n                                \" added to our pages.\\r\\n\\r\\nIf you do not allow these cookies then some or all o\" +\r\n                                \"f these services may not function properly.\",\r\n                        \"hasToggle\": true,\r\n                        \"selected\": false\r\n                    }, {\r\n                        \"text\": \"Targetting Cookies\",\r\n                        \"content\": \"These cookies may be set through our site by our advertising partners. They may \" +\r\n                                \"be used by those companies to build a profile of your interests and show you rel\" +\r\n                                \"evant adverts on other sites.\\r\\n\\r\\nThey do not store directly personal informa\" +\r\n                                \"tion, but are based on uniquely identifying your browser and internet device. If\" +\r\n                                \" you do not allow these cookies, you will experience less targeted advertising.\",\r\n                        \"hasToggle\": true,\r\n                        \"selected\": false\r\n                    }\r\n                ]\r\n            },\r\n            \"saveButtonData\": {\r\n                \"text\": \"Save My Preferences\",\r\n                \"textColor\": \"#000000\",\r\n                \"backgroundColor\": \"#d9d9d9\",\r\n                \"borderColor\": \"#d9d9d9\"\r\n            },\r\n            \"backgroundColor\": \"#263238\",\r\n            \"borderColor\": \"#263238\"\r\n        },\r\n        \"position\": \"right\",\r\n        \"alwaysShowPopupOnLoad\": false\r\n    }\r\n}\r\n\r\nexport default {\r\n    widgetProps : widgetProperties\r\n};","import React, { Component, Fragment } from \"react\";\r\nimport \"./ThemeConfigureForm.scss\";\r\nimport WidgetDataModel from \"../../../Common/WidgetDataModel\";\r\nimport CONSTANTS from \"../../../Common/Constants\";\r\nimport { Form, Divider, Button, Row, Col, Collapse, Select, Input } from \"antd\";\r\nimport ColorPicker from \"../../../Components/ColorPicker/ColorPicker\";\r\nimport TemplateJson from \"../ThemeTemplates/TemplateJson\";\r\n\r\nconst { Option } = Select;\r\nconst { Panel } = Collapse;\r\n\r\nexport class ThemeConfigureForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { cookieNotifyData, cookieSettingsData } = this.props.widgetDataModel;\r\n    this.state = {\r\n      selectedTheme: \"default\",\r\n\r\n      backgroundColor: cookieNotifyData.backgroundColor,\r\n      primaryColor: cookieNotifyData.acceptButtonData.backgroundColor,\r\n      secondaryColor: cookieNotifyData.settingsLink.backgroundColor,\r\n      headerColor: cookieNotifyData.headingData.textColor,\r\n      contentColor: cookieNotifyData.contentData.textColor,\r\n\r\n      notifyHeaderColor: cookieNotifyData.headingData.textColor,\r\n      notifyBodyColor: cookieNotifyData.contentData.textColor,\r\n      notifyBackgroundColor: cookieNotifyData.backgroundColor,\r\n      notifyBorderColor: cookieNotifyData.borderColor,\r\n\r\n      notifyAcceptTextColor: cookieNotifyData.acceptButtonData.textColor,\r\n      notifyAcceptBackgroundColor: cookieNotifyData.acceptButtonData.backgroundColor,\r\n      notifyAcceptBorderColor: cookieNotifyData.acceptButtonData.borderColor,\r\n\r\n      notifySettingsTextColor: cookieNotifyData.settingsLink.textColor,\r\n      notifySettingsBackgroundColor: cookieNotifyData.settingsLink.backgroundColor,\r\n      notifySettingsBorderColor: cookieNotifyData.settingsLink.borderColor,\r\n\r\n      settingsHeaderColor: cookieSettingsData.headingData.textColor,\r\n      settingsBodyColor: cookieSettingsData.contentData.textColor,\r\n      settingsBackgroundColor: cookieSettingsData.backgroundColor,\r\n      settingsBorderColor: cookieSettingsData.borderColor,\r\n\r\n      settingsAcceptTextColor: cookieSettingsData.acceptButtonData.textColor,\r\n      settingsAcceptBackgroundColor: cookieSettingsData.acceptButtonData.backgroundColor,\r\n      settingsAcceptBorderColor: cookieSettingsData.acceptButtonData.borderColor,\r\n\r\n      settingsSaveTextColor: cookieSettingsData.saveButtonData.textColor,\r\n      settingsSaveBackgroundColor: cookieSettingsData.saveButtonData.backgroundColor,\r\n      settingsSaveBorderColor: cookieSettingsData.saveButtonData.borderColor,\r\n\r\n      settingsAccordionHeaderColor: cookieSettingsData.accordionData.headerColor,\r\n      settingsAccordionBodyColor: cookieSettingsData.accordionData.contentColor,\r\n      settingsAccordionBackgroundColor: cookieSettingsData.accordionData.backgroundColor,\r\n      settingsAccordionBorderColor: cookieSettingsData.accordionData.borderColor,\r\n\r\n      settingsAccordionToggleSelectedColor: cookieSettingsData.accordionData.toggleSelectedColor,\r\n      settingsAccordionToggleColor: cookieSettingsData.accordionData.toggleDefaultColor,\r\n    };\r\n    this.widgetDataModel = new WidgetDataModel(props.widgetDataModel);\r\n  }\r\n\r\n  changeGlobalTheme = (colorData, type) => {\r\n    const color = colorData.hex;\r\n    const { cookieNotifyData, cookieSettingsData } = this.widgetDataModel;\r\n    this.setState({ [type]: color });\r\n    var textColor = this.calculateTextColor(colorData.rgb);\r\n    switch (type) {\r\n      case CONSTANTS.BACKGROUND:\r\n        cookieNotifyData.backgroundColor = cookieSettingsData.backgroundColor = cookieNotifyData.borderColor = cookieSettingsData.borderColor = color;\r\n        cookieNotifyData.headingData.textColor = cookieSettingsData.headingData.textColor = cookieNotifyData.contentData.textColor = cookieSettingsData.contentData.textColor = textColor;\r\n        this.setState({\r\n          [CONSTANTS.NOTIFY_BACKGROUND]: color,\r\n          [CONSTANTS.SETTINGS_BACKGROUND]: color,\r\n          [CONSTANTS.NOTIFY_BORDER]: color,\r\n          [CONSTANTS.SETTINGS_BORDER]: color,\r\n          [CONSTANTS.HEADER_COLOR]: textColor,\r\n          [CONSTANTS.NOTIFY_HEADER]: textColor,\r\n          [CONSTANTS.SETTINGS_HEADER]: textColor,\r\n        });\r\n        break;\r\n      case CONSTANTS.PRIMARY_COLOR:\r\n        textColor = this.calculateTextColor(colorData.rgb);\r\n        cookieNotifyData.acceptButtonData.backgroundColor = cookieSettingsData.acceptButtonData.backgroundColor = cookieNotifyData.acceptButtonData.borderColor = cookieSettingsData.acceptButtonData.borderColor = cookieSettingsData.accordionData.toggleSelectedColor = color;\r\n        cookieNotifyData.acceptButtonData.textColor = cookieSettingsData.acceptButtonData.textColor = textColor;\r\n        this.setState({\r\n          [CONSTANTS.NOTIFY_ACCEPT_BACKGROUND]: color,\r\n          [CONSTANTS.SETTINGS_ACCEPT_BACKGROUND]: color,\r\n          [CONSTANTS.NOTIFY_ACCEPT_BORDER]: color,\r\n          [CONSTANTS.SETTINGS_ACCEPT_BORDER]: color,\r\n          [CONSTANTS.SETTINGS_ACCORDION_TOGGLE_SELECTED]: color,\r\n          [CONSTANTS.NOTIFY_ACCEPT_TEXT]: textColor,\r\n          [CONSTANTS.SETTINGS_ACCEPT_TEXT]: textColor,\r\n        });\r\n        break;\r\n      case CONSTANTS.SECONDARY_COLOR:\r\n        textColor = this.calculateTextColor(colorData.rgb);\r\n        cookieNotifyData.settingsLink.backgroundColor = cookieSettingsData.saveButtonData.backgroundColor = cookieNotifyData.settingsLink.borderColor = cookieSettingsData.saveButtonData.borderColor = color;\r\n        cookieNotifyData.settingsLink.textColor = cookieSettingsData.saveButtonData.textColor = textColor;\r\n        this.setState({\r\n          [CONSTANTS.NOTIFY_SETTINGS_BACKGROUND]: color,\r\n          [CONSTANTS.SETTINGS_SAVE_BACKGROUND]: color,\r\n          [CONSTANTS.NOTIFY_SETTINGS_BORDER]: color,\r\n          [CONSTANTS.SETTINGS_SAVE_BORDER]: color,\r\n          [CONSTANTS.NOTIFY_SETTINGS_TEXT]: textColor,\r\n          [CONSTANTS.SETTINGS_SAVE_TEXT]: textColor,\r\n        });\r\n        break;\r\n      case CONSTANTS.HEADER_COLOR:\r\n        cookieNotifyData.headingData.textColor = cookieSettingsData.headingData.textColor = cookieSettingsData.accordionData.headerColor = color;\r\n        this.setState({\r\n          [CONSTANTS.NOTIFY_HEADER]: color,\r\n          [CONSTANTS.SETTINGS_HEADER]: color,\r\n          [CONSTANTS.SETTINGS_ACCORDION_HEADER]: color,\r\n        });\r\n        break;\r\n      case CONSTANTS.CONTENT_COLOR:\r\n        cookieNotifyData.contentData.textColor = cookieSettingsData.contentData.textColor = cookieSettingsData.accordionData.contentColor = color;\r\n        this.setState({\r\n          [CONSTANTS.NOTIFY_BODY]: color,\r\n          [CONSTANTS.SETTINGS_BODY]: color,\r\n          [CONSTANTS.SETTINGS_ACCORDION_BODY]: color,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.props.handleChange(this.widgetDataModel);\r\n  };\r\n\r\n  changeNotifyTheme = (colorData, type) => {\r\n    const color = colorData.hex;\r\n    const { cookieNotifyData } = this.widgetDataModel;\r\n    this.setState({ [type]: color });\r\n    switch (type) {\r\n      case CONSTANTS.NOTIFY_HEADER:\r\n        cookieNotifyData.headingData.textColor = color;\r\n        break;\r\n      case CONSTANTS.NOTIFY_BODY:\r\n        cookieNotifyData.contentData.textColor = color;\r\n        break;\r\n      case CONSTANTS.NOTIFY_BACKGROUND:\r\n        cookieNotifyData.backgroundColor = color;\r\n        break;\r\n      case CONSTANTS.NOTIFY_BORDER:\r\n        cookieNotifyData.borderColor = color;\r\n        break;\r\n      case CONSTANTS.NOTIFY_ACCEPT_TEXT:\r\n        cookieNotifyData.acceptButtonData.textColor = color;\r\n        break;\r\n      case CONSTANTS.NOTIFY_ACCEPT_BACKGROUND:\r\n        cookieNotifyData.acceptButtonData.backgroundColor = color;\r\n        break;\r\n      case CONSTANTS.NOTIFY_ACCEPT_BORDER:\r\n        cookieNotifyData.acceptButtonData.borderColor = color;\r\n        break;\r\n      case CONSTANTS.NOTIFY_SETTINGS_TEXT:\r\n        cookieNotifyData.settingsLink.textColor = color;\r\n        break;\r\n      case CONSTANTS.NOTIFY_SETTINGS_BACKGROUND:\r\n        cookieNotifyData.settingsLink.backgroundColor = color;\r\n        break;\r\n      case CONSTANTS.NOTIFY_SETTINGS_BORDER:\r\n        cookieNotifyData.settingsLink.borderColor = color;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.props.handleChange(this.widgetDataModel);\r\n  };\r\n\r\n  changeSettingsTheme = (colorData, type) => {\r\n    const color = colorData.hex;\r\n    const { cookieSettingsData } = this.widgetDataModel;\r\n    this.setState({ [type]: color });\r\n    switch (type) {\r\n      case CONSTANTS.SETTINGS_HEADER:\r\n        cookieSettingsData.headingData.textColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_BODY:\r\n        cookieSettingsData.contentData.textColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_BACKGROUND:\r\n        cookieSettingsData.backgroundColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_BORDER:\r\n        cookieSettingsData.borderColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_ACCEPT_TEXT:\r\n        cookieSettingsData.acceptButtonData.textColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_ACCEPT_BACKGROUND:\r\n        cookieSettingsData.acceptButtonData.backgroundColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_ACCEPT_BORDER:\r\n        cookieSettingsData.acceptButtonData.borderColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_SAVE_TEXT:\r\n        cookieSettingsData.saveButtonData.textColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_SAVE_BACKGROUND:\r\n        cookieSettingsData.saveButtonData.backgroundColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_SAVE_BORDER:\r\n        cookieSettingsData.saveButtonData.borderColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_ACCORDION_HEADER:\r\n        cookieSettingsData.accordionData.headerColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_ACCORDION_BODY:\r\n        cookieSettingsData.accordionData.contentColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_ACCORDION_BACKGROUND:\r\n        cookieSettingsData.accordionData.backgroundColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_ACCORDION_BORDER:\r\n        cookieSettingsData.accordionData.borderColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_ACCORDION_TOGGLE_SELECTED:\r\n        cookieSettingsData.accordionData.toggleSelectedColor = color;\r\n        break;\r\n      case CONSTANTS.SETTINGS_ACCORDION_TOGGLE:\r\n        cookieSettingsData.accordionData.toggleDefaultColor = color;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.props.handleChange(this.widgetDataModel);\r\n  };\r\n\r\n  loadTheme = (value) => {\r\n    if (value === \"light\") {\r\n      this.setState({ selectedTheme: value });\r\n      this.props.handleChange(TemplateJson.widgetProps.light);\r\n    } else if (value === \"dark\") {\r\n      this.setState({ selectedTheme: value });\r\n      this.props.handleChange(TemplateJson.widgetProps.alien);\r\n    } else if (value === \"alien\") {\r\n      this.setState({ selectedTheme: value });\r\n      this.props.handleChange(TemplateJson.widgetProps.dark);\r\n    } else {\r\n      this.props.handleChange(this.widgetDataModel);\r\n    }\r\n  };\r\n\r\n  saveTheme = () => {\r\n    console.log(JSON.stringify(this.widgetDataModel));\r\n  };\r\n\r\n  calculateTextColor = (colorData) => {\r\n    let luminance = 0.2126 * colorData.r + 0.7152 * colorData.g + 0.0722 * colorData.b;\r\n    let calculatedColor = \"#000000\";\r\n    if (luminance < 140) {\r\n      calculatedColor = \"#ffffff\";\r\n    }\r\n    return calculatedColor;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Divider orientation=\"center\">Basic Theming</Divider>\r\n        <Row justify=\"center\">\r\n          <Col span={12}>\r\n            <Form.Item label=\"Theme:\" className=\"ThemeLabel\">\r\n              <Select\r\n                onChange={this.loadTheme}\r\n                defaultValue={this.state.selectedTheme}\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"Select a theme\"\r\n              >\r\n                <Option value=\"default\">Default</Option>\r\n                <Option value=\"light\">Light</Option>\r\n                <Option value=\"dark\">Dark</Option>\r\n                <Option value=\"alien\">Alien</Option>\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row justify=\"space-around\">\r\n          <Form.Item label=\"Background:\" className=\"ThemeLabel\">\r\n            <ColorPicker\r\n              defaultColor={this.state.backgroundColor}\r\n              colorPicked={(color) => {\r\n                this.changeGlobalTheme(color, CONSTANTS.BACKGROUND);\r\n              }}\r\n            ></ColorPicker>\r\n          </Form.Item>\r\n          <Form.Item label=\"Primary Button:\" className=\"ThemeLabel\">\r\n            <ColorPicker\r\n              defaultColor={this.state.primaryColor}\r\n              colorPicked={(color) => {\r\n                this.changeGlobalTheme(color, CONSTANTS.PRIMARY_COLOR);\r\n              }}\r\n            ></ColorPicker>\r\n          </Form.Item>\r\n          <Form.Item label=\"Secondary Button:\" className=\"ThemeLabel\">\r\n            <ColorPicker\r\n              defaultColor={this.state.secondaryColor}\r\n              colorPicked={(color) => {\r\n                this.changeGlobalTheme(color, CONSTANTS.SECONDARY_COLOR);\r\n              }}\r\n            ></ColorPicker>\r\n          </Form.Item>\r\n          <Form.Item label=\"Header Color:\" className=\"ThemeLabel\">\r\n            <ColorPicker\r\n              defaultColor={this.state.headerColor}\r\n              colorPicked={(color) => {\r\n                this.changeGlobalTheme(color, CONSTANTS.HEADER_COLOR);\r\n              }}\r\n            ></ColorPicker>\r\n          </Form.Item>\r\n          <Form.Item label=\"Body Color:\" className=\"ThemeLabel\">\r\n            <ColorPicker\r\n              defaultColor={this.state.contentColor}\r\n              colorPicked={(color) => {\r\n                this.changeGlobalTheme(color, CONSTANTS.CONTENT_COLOR);\r\n              }}\r\n            ></ColorPicker>\r\n          </Form.Item>\r\n        </Row>\r\n\r\n        <Divider orientation=\"center\">Advanced Theming</Divider>\r\n        <Row justify=\"center\">\r\n          <Col span={12}>\r\n            <Form.Item label=\"Theme Name:\" className=\"ThemeLabel\">\r\n              <Input placeholder=\"Enter a Theme name\"></Input>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Collapse>\r\n          <Panel header=\"Notify Pop-up\" key=\"1\">\r\n            <Row gutter={[0, 16]} className=\"ThemeBorder\">\r\n              <Divider orientation=\"left\">Content</Divider>\r\n              <Col offset={4}></Col>\r\n              <Form.Item label=\"Background:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.notifyBackgroundColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeNotifyTheme(color, CONSTANTS.NOTIFY_BACKGROUND);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"Header:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.notifyHeaderColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeNotifyTheme(color, CONSTANTS.NOTIFY_HEADER);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"Body:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.notifyBodyColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeNotifyTheme(color, CONSTANTS.NOTIFY_BODY);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"Border:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.notifyBorderColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeNotifyTheme(color, CONSTANTS.NOTIFY_BORDER);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Divider orientation=\"left\" className=\"ThemeHeader\">\r\n                Accept Button\r\n              </Divider>\r\n              <Col offset={4}></Col>\r\n              <Form.Item label=\"Background:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.notifyAcceptBackgroundColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeNotifyTheme(color, CONSTANTS.NOTIFY_ACCEPT_BACKGROUND);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"&nbsp;Border:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.notifyAcceptBorderColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeNotifyTheme(color, CONSTANTS.NOTIFY_ACCEPT_BORDER);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"&nbsp;&nbsp;Text:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.notifyAcceptTextColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeNotifyTheme(color, CONSTANTS.NOTIFY_ACCEPT_TEXT);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n\r\n              <Divider orientation=\"left\" className=\"ThemeHeader\">\r\n                Settings Button\r\n              </Divider>\r\n              <Col offset={4}></Col>\r\n              <Form.Item label=\"Background:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.notifySettingsBackgroundColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeNotifyTheme(color, CONSTANTS.NOTIFY_SETTINGS_BACKGROUND);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"&nbsp;Border:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.notifySettingsBorderColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeNotifyTheme(color, CONSTANTS.NOTIFY_SETTINGS_BORDER);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"&nbsp;&nbsp;Text:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.notifySettingsTextColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeNotifyTheme(color, CONSTANTS.NOTIFY_SETTINGS_TEXT);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n            </Row>\r\n          </Panel>\r\n        </Collapse>\r\n        <Collapse\r\n          style={{\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          <Panel header=\"Settings Pop-up\" key=\"2\">\r\n            <Row gutter={[0, 16]} className=\"ThemeBorder\">\r\n              <Divider orientation=\"left\">Content</Divider>\r\n              <Col offset={4}></Col>\r\n              <Form.Item label=\"Background:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsBackgroundColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_BACKGROUND);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"Header:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsHeaderColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_HEADER);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"Body:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsBodyColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_BODY);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"Border:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsBorderColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_BORDER);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Divider orientation=\"left\" className=\"ThemeHeader\">\r\n                Accordion\r\n              </Divider>\r\n              <Col offset={4}></Col>\r\n              <Form.Item label=\"Background:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsAccordionBackgroundColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_ACCORDION_BACKGROUND);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"Header:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsAccordionHeaderColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_ACCORDION_HEADER);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"Body:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsAccordionBodyColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_ACCORDION_BODY);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"Border:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsAccordionBorderColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_ACCORDION_BORDER);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Divider orientation=\"left\" className=\"ThemeHeader\">\r\n                Accept Button\r\n              </Divider>\r\n              <Col offset={4}></Col>\r\n              <Form.Item label=\"Background:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsAcceptBackgroundColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_ACCEPT_BACKGROUND);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"&nbsp;Border:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsAcceptBorderColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_ACCEPT_BORDER);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"&nbsp;&nbsp;Text:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsAcceptTextColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_ACCEPT_TEXT);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Divider orientation=\"left\" className=\"ThemeHeader\">\r\n                Save Button\r\n              </Divider>\r\n              <Col offset={4}></Col>\r\n              <Form.Item label=\"Background:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsSaveBackgroundColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_SAVE_BACKGROUND);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"&nbsp;Border:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsSaveBorderColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_SAVE_BORDER);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"&nbsp;&nbsp;Text:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsSaveTextColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_SAVE_TEXT);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Divider orientation=\"left\" className=\"ThemeHeader\">\r\n                Toggle\r\n              </Divider>\r\n              <Col offset={4}></Col>\r\n              <Form.Item\r\n                label=\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Selected:\"\r\n                className=\"ThemeLabel\"\r\n              >\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsAccordionToggleSelectedColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_ACCORDION_TOGGLE_SELECTED);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n              <Col offset={1}></Col>\r\n              <Form.Item label=\"Default:\" className=\"ThemeLabel\">\r\n                <ColorPicker\r\n                  defaultColor={this.state.settingsAccordionToggleColor}\r\n                  colorPicked={(color) => {\r\n                    this.changeSettingsTheme(color, CONSTANTS.SETTINGS_ACCORDION_TOGGLE);\r\n                  }}\r\n                ></ColorPicker>\r\n              </Form.Item>\r\n            </Row>\r\n          </Panel>\r\n        </Collapse>\r\n\r\n        <Row justify=\"center\" className=\"ThemeButton\">\r\n          <Col span={4}>\r\n            <Button type=\"primary\" danger>\r\n              Reset\r\n            </Button>\r\n          </Col>\r\n          <Col offset={1}></Col>\r\n          <Col span={4}>\r\n            <Button type=\"primary\" onClick={this.saveTheme}>\r\n              Save\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeConfigureForm;\r\n","import React, { Component, Fragment } from 'react';\r\nimport ThemeConfigureForm from './ThemeConfigureForm/ThemeConfigureForm';\r\nimport './ThemeConfiguration.scss';\r\nimport { Row, Col } from 'antd';\r\n\r\nexport class ThemeConfiguration extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Row className=\"ThemePadding\">\r\n          <Col span={15} className=\"ThemeForm\">\r\n            <ThemeConfigureForm widgetDataModel={this.props.widgetData} handleChange={this.dataFromChild} />\r\n          </Col>\r\n          <Col offset={8}></Col>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  dataFromChild = (data) => {\r\n    this.props.dataFromChild(data);\r\n  };\r\n}\r\n\r\nexport default ThemeConfiguration;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport \"./DummyWidget.scss\";\r\n\r\nexport class DummyWidget extends Component {\r\n  widget = null;\r\n\r\n  componentDidMount() {\r\n    this.widget = document.querySelector(\"cookie-consent\");\r\n    this.widget.popupProperties = this.props.widgetJsonData;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.widget) {\r\n      this.widget.popupProperties = this.props.widgetJsonData;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <cookie-consent></cookie-consent>;\r\n  }\r\n}\r\n\r\nexport default DummyWidget;","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Menu, Row, Divider } from 'antd';\r\nimport { PieChartOutlined, GlobalOutlined, EyeInvisibleFilled } from '@ant-design/icons';\r\nimport DataConfigure from '../../Screens/DataConfigure/DataConfigure';\r\nimport ThemeConfiguration from '../../Screens/ThemeConfiguration/ThemeConfiguration';\r\nimport DummyWidget from '../../Components/DummyWidget/DummyWidget';\r\nimport DummyJson from '../../Common/DummyJson';\r\nimport 'antd/dist/antd.css';\r\nimport './NavMenu.scss';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass NavMenu extends Component {\r\n  state = {\r\n    collapsed: false,\r\n    currentPath: '/dashboard',\r\n    widgetDataModel: DummyJson.widgetProps,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  dataFromChild = (data) => {\r\n    this.setState({ widgetDataModel: data });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout\r\n          style={{\r\n            minHeight: '100vh',\r\n          }}\r\n        >\r\n          <Header className=\"logo\" style={{ position: 'fixed', zIndex: '9999', minWidth: '100vw' }}>\r\n            <Row>\r\n              <EyeInvisibleFilled\r\n                style={{\r\n                  fontSize: '40px',\r\n                  color: '#fff',\r\n                  alignSelf: 'center',\r\n                }}\r\n              />\r\n              <div className=\"app-name\">Privacy Management System</div>\r\n            </Row>\r\n          </Header>\r\n          <Layout>\r\n            <Sider\r\n              collapsible\r\n              collapsed={this.state.collapsed}\r\n              onCollapse={this.onCollapse}\r\n              style={{ position: 'fixed', minHeight: '100vh', zIndex: '9999', marginTop: 64, backgroundColor: '#2d4154' }}\r\n            >\r\n              <Menu theme=\"dark\" defaultSelectedKeys={this.state.currentPath} mode=\"inline\">\r\n                <Menu.Item key=\"/dashboard\" icon={<PieChartOutlined />}>\r\n                  <span>Dashboard</span>\r\n                  <Link to=\"/dashboard\" />\r\n                </Menu.Item>\r\n                <SubMenu key=\"/profiles\" icon={<GlobalOutlined />} title=\"Profiles\">\r\n                  <SubMenu key=\"sub1.1\" title=\"Website 1\">\r\n                    <Menu.Item key=\"/profiles/audit\">\r\n                      Audit\r\n                      <Link to=\"/profiles/audit\" />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"/profiles/scan\">\r\n                      Cookie Scanner\r\n                      <Link to=\"/profiles/scan\" />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"/profiles/widget/content\">\r\n                      Widget Content\r\n                      <Link to=\"/profiles/widget/content\" />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"/profiles/widget/theme\">\r\n                      Widget Theme\r\n                      <Link to=\"/profiles/widget/theme\" />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"/profiles/behaviour\">\r\n                      Widget Behaviour\r\n                      <Link to=\"/profiles/behaviour\" />\r\n                    </Menu.Item>\r\n                  </SubMenu>\r\n                  <Menu.Item key=\"4\">Website 2</Menu.Item>\r\n                  <Menu.Item key=\"5\">Website 3</Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Sider>\r\n            <Layout className=\"site-layout\">\r\n              <Content style={{ marginLeft: this.state.collapsed ? 80 : 200, transition: '0.2s', marginTop: 64 }}>\r\n                <Switch>\r\n                  <Route path=\"/profiles/widget/content\">\r\n                    <DataConfigure widgetData={this.state.widgetDataModel} dataFromChild={this.dataFromChild} />\r\n                  </Route>\r\n\r\n                  <Route path=\"/profiles/widget/theme\">\r\n                    <ThemeConfiguration widgetData={this.state.widgetDataModel} dataFromChild={this.dataFromChild} />\r\n                  </Route>\r\n                </Switch>\r\n                <Route path=\"/profiles/widget\">\r\n                  <div className=\"WidgetTheme\" style={{ width: this.state.collapsed ? '32%' : '29.5%', transition: '0.2s' }}>\r\n                    <Divider orientation=\"center\" className=\"ThemeHeader\">\r\n                      Widget Preview\r\n                    </Divider>\r\n                    <DummyWidget widgetJsonData={this.state.widgetDataModel} />\r\n                  </div>\r\n                </Route>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavMenu;\r\n","import \"./App.scss\";\r\nimport React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport NavMenu from \"./Components/NavMenu/NavMenu\";\r\n\r\nfunction App() {\r\n  return <NavMenu />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls. Learn\r\n// more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}